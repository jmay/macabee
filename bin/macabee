#!/usr/bin/env ruby

require 'rubygems'
require 'macabee'
require "json"

ab = Macabee::Contacts.new

command, *args = ARGV
arg = args.first

case command
when 'dump'
  puts JSON.pretty_generate(ab.to_hash)

when 'groups'
  puts JSON.pretty_generate(ab.groups.map(&:to_hash))

when 'contacts'
  puts JSON.pretty_generate(ab.contacts.map(&:to_hash))

when 'contact'
  if contact = ab.contact(arg)
    puts JSON.pretty_generate(contact.to_hash)
  else
    raise "No such person in Address Book '#{arg}'"
  end

when 'lookup'
  firstname, lastname = args
  if contact = ab.lookup(firstname, lastname)
    puts JSON.pretty_generate(contact.to_hash)
  else
    raise "No such person in Address Book '#{arg}'"
  end

when 'group'
  if group = ab.group(arg)
    puts JSON.pretty_generate(group.to_hash)
  else
    raise "No such group in Address Book '#{arg}'"
  end

when 'compare'
  # look in file for a JSON representation and compare it to version in the AB
  hash = JSON.load(File.open(arg))
  abid = hash['xref']['ab']
  contact = ab.contact(abid)
  if contact.nil?
    contact = ab.lookup(hash['name']['first'], hash['name']['last'])
    $stderr.puts "Address Book UUID has changed to #{contact.uuid}"
    hash['xref']['ab'] = contact.uuid
  end
  if contact.nil?
    raise "Unable to find matching contact record."
  end
  diffs = contact.compare(hash)
  if diffs.any?
    puts JSON.pretty_generate(diffs)
    # contact.patch(diffs)
  else
    puts "No changes."
  end

else
  raise "Unknown command '#{command}'"
end
